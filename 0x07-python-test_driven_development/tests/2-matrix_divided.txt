## Importing the module

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> module_doc = __import__('2-matrix_divided').__doc__
>>> method_doc = __import__('2-matrix_divided').matrix_divided.__doc__
>>> len(module_doc) > 0
True
>>> len(method_doc) > 0
True

## Positive outcomes

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

>>> matrix_divided([[1.1 , 2.1, 3.1], [4.1, 5.1, 6.1], [7.1, 8.1, 9.1]], 3)
[[0.37, 0.7, 1.03], [1.37, 1.7, 2.03], [2.37, 2.7, 3.03]]

## Negative outcomes

## If the matrix is a string
>>> matrix_divided("[[1, 2, 3], [4, 5, 6]]", 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

## If the matrix is a tuple
>>> matrix_divided(([1, 2, 3], [4, 5, 6]), 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

## If the matrix is a dictionary
>>> matrix_divided({"[[1, 2, 3], [4, 5, 6]]": "dict"}, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

## If lists within the matrix are uneven
>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

## If div is zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

## If div is a string
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "hello")
Traceback (most recent call last):
...
TypeError: div must be a number

## If div is a list
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], [1, 2, 3])
Traceback (most recent call last):
...
TypeError: div must be a number

## If div is a tuple
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], (1, 2, 3))
Traceback (most recent call last):
...
TypeError: div must be a number

## If div is a dictionary
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], {"hello": 2})
Traceback (most recent call last):
...
TypeError: div must be a number

## If elements of the matrix are strings
>>> matrix_divided([["One", 2, 3], ["Four", 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

## If elements of the matrix are lists
>>> matrix_divided([[[1, 2], 2, 3], [[1, 2], 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

## If elements of the matrix are tuples
>>> matrix_divided([[(1, 2), 2, 3], [(1, 2), 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

## If elements of the matrix are dictionaries
>>> matrix_divided([[{"1": 2}, 2, 3], [{"2": 3}, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats