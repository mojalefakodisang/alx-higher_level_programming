The ``2-matrix_divided`` module
========================

Using ``matrix_divided``
------------------------

Import the function ``matrix_divided`` from the module
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Checking module docstring
::
>>> m = __import__('2-matrix_divided').__doc__
>>> len(m) > 1
True

Checking function docstring
::
>>> k = __import__('2-matrix_divided').matrix_divided.__doc__
>>> len(k) > 1
True

POSITIVE TESTING
========================

Checking regular matrix divided by regular denominator
::
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

Checking negative matrix elements divided by regular denominator
::
>>> matrix = [[-1, -2, -3], [-4, -5, -6]]
>>> print(matrix_divided(matrix, 3))
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Checking if div is a larger number
::
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 999999))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Checking division of matrix with a negative div
::
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, -3))
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Checking if it passes if there are more than 3 elements in each list
::
>>> matrix = [[1, 2, 3, 4], [5, 6, 7, 8]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0, 1.33], [1.67, 2.0, 2.33, 2.67]]

NEGATIVE TESTING
==================================

Checking if div is None
::
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Checking if each row in the matrix are of same size
::
>>> matrix = [[1, 2, 3], [4, 5]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

Checking where elements of each row are int/floats
::
>>> matrix = [[1, "H", 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking if one of the list in the matrix is None
::
>>> matrix = [None,[4, 5, 6]]
>>> print(matrix_divided(matrix, 1))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking if the div is not zero
::
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

Checking if the div is an integer or float
::
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, "div"))
Traceback (most recent call last):
	...
TypeError: div must be a number
