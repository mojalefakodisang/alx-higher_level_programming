"""Returns sum between two integers from INT_MIN to INT_MAX"""
>>> add_integer = __import__('0-add_integer').add_integer
>>> m = __import__('0-add_integer').__doc__
>>> len(m) > 1
True
>>> k = __import__('0-add_integer').add_integer.__doc__
>>> len(k) > 1
True
>>> add_integer(0, 1)
1
>>> add_integer(1, 0)
1
>>> add_integer(1)
99
>>> add_integer(5, 0.5)
5
>>> add_integer()
Traceback (most recent call last):
	...
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(0)
98
>>> add_integer(0, "School")
Traceback (most recent call last):
	...
TypeError: b must be an integer
>>> add_integer("School", 2)
Traceback (most recent call last):
	...
TypeError: a must be an integer
>>> add_integer(1, float('inf'))
Traceback (most recent call last):
	...
OverflowError: cannot convert float infinity to integer
>>> add_integer(1, float('nan'))
Traceback (most recent call last):
	...
ValueError: cannot convert float NaN to integer
